diff --git a/node_modules/qiankun/es/loader.js b/node_modules/qiankun/es/loader.js
index f54d9f0..4179757 100644
--- a/node_modules/qiankun/es/loader.js
+++ b/node_modules/qiankun/es/loader.js
@@ -199,7 +199,8 @@ export function loadApp(app) {
         switch (_context16.prev = _context16.next) {
           case 0:
             entry = app.entry, appName = app.name;
-            appInstanceId = "".concat(appName, "_").concat(+new Date());
+            // appInstanceId = "".concat(appName, "_").concat(+new Date());
+            appInstanceId = "".concat(appName, "_");
             markName = "[qiankun] App ".concat(appInstanceId, " Loading");
 
             if (process.env.NODE_ENV === 'development') {
@@ -237,15 +238,17 @@ export function loadApp(app) {
             render = getRender(appName, appContent, container, legacyRender); // 第一次加载设置应用可见区域 dom 结构
             // 确保每次应用加载前容器 dom 结构已经设置完毕
             
-            render({
-              element: element,
-              loading: true
-            }, 'loading');
+            const containerEle = document.querySelector(container);
+            if(!containerEle.firstChild){
+              render({
+                element: element,
+                loading: true
+              }, 'loading');
+            }
             containerGetter = getAppWrapperGetter(appName, appInstanceId, !!legacyRender, strictStyleIsolation, function () {
               return element;
             });
             global = window;
-
             mountSandbox = function mountSandbox() {
               return Promise.resolve();
             };
@@ -347,11 +350,13 @@ export function loadApp(app) {
                         case 0:
                           // element would be destroyed after unmounted, we need to recreate it if it not exist
                           element = element || createElement(appContent, strictStyleIsolation);
-                          render({
-                            element: element,
-                            loading: true
-                          }, 'mounting');
-
+                          const containerEle = document.querySelector(container);
+                          if(!containerEle.firstChild){
+                            render({
+                              element: element,
+                              loading: true
+                            }, 'mounting');
+                          }
                         case 2:
                         case "end":
                           return _context4.stop();
@@ -401,10 +406,15 @@ export function loadApp(app) {
                     while (1) {
                       switch (_context7.prev = _context7.next) {
                         case 0:
-                          return _context7.abrupt("return", render({
-                            element: element,
-                            loading: false
-                          }, 'mounted'));
+                          return _context7.abrupt("return", () => {
+                            const containerEle = document.querySelector(container);
+                            if(!containerEle.firstChild){
+                              render({
+                                element: element,
+                                loading: false
+                              }, 'mounted')
+                            }
+                          });
 
                         case 1:
                         case "end":
@@ -526,10 +536,10 @@ export function loadApp(app) {
                     while (1) {
                       switch (_context14.prev = _context14.next) {
                         case 0:
-                          render({
-                            element: null,
-                            loading: false
-                          }, 'unmounted');
+                          // render({
+                          //   element: null,
+                          //   loading: false
+                          // }, 'unmounted');
                           offGlobalStateChange(appInstanceId); // for gc
 
                           element = null;
